knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
```{r echo=F}
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
getwd()
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
getwd()
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
description <- sapply(file[1,],function(x) str_replace_all(x,'[.]',' ')) #Creem llista de descripcion
name <- unlist(file[2,]) #Creem llista de noms
df <- data.frame(Name = name,Description=description)
rownames(df)<-NULL #Descartem la indexació per defecte
kbl(df) %>% #Dibixem la taula
kable_paper(full_width = F) %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2)%>%
scroll_box( height = "350px")
colnames(file)<-c('Code','Economy','Year','OPP','PC','FAIL','EI','TEA','OWN','EMPL','MOT','FMTEA','FMOD','JOB','INNOV','BSER','STAT','CHOI') #Setejem el nom de les columnes
file <- file[-c(1,2),] #Eliminem les files que no ens interessen
file <- type.convert(file, as.is=TRUE) #Tornem a fer que el sistema infereixi nous tipus de dades per columna
rownames(file) <- NULL #Ens desfem de la indexació automàtica
head(file,n=5) %>% #Dibuixem la taula
kbl() %>%
kable_paper("hover")
file["Economy"]%>%
unique()%>%
unlist()%>%
cat(sep=", ")
file$Economy <- sapply(file$Economy, str_to_title) #Apliquem els canvis de fer els noms de paisos majúscula.
file_gb <- file %>%
group_by(Economy) %>% #Agrupem per pais
summarise(min_year = min(Year),max_year = max(Year), registered_years = n_distinct(Year))
#Fem servir funcions agrupadores per deduir les dades
file_gb %>% #Dibuixem la taula per pantalla
mutate(index = row_number()) %>% #Afegim un index a la taula
select(index, everything()) %>% #Fiquem l'index el principi
kbl() %>%
kable_paper(bootstrap_options = "striped", full_width = F)%>%
scroll_box( height = "300px")
na_count <- sapply(file, function(x) sum(is.na(x))) #Es conten quants NA hi ha per columna
na_count%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
max_val <- sapply(file[,4:ncol(file)], function(x) max(x, na.rm=TRUE))#Calculem els maxim per columna
min_val <- sapply(file[,4:ncol(file)], function(x) min(x, na.rm=TRUE))#Calculem els minims per columna
df_result <- data.frame(Max=max_val, Min=min_val)
df_result%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
n_end<-ncol(file) #Creem una variable pel nombre de columnes
cols = file[,4:n_end] #Definim les columnes que volem manipular
cols[cols < 0 | cols > 100] <- NA #Setejem a NA les columnes que no volem
are_out_of_bound <- (cols < 0) | (cols > 100) #Busquem si hi ha valor fora dels limits
any(are_out_of_bound == TRUE, na.rm = TRUE) #Demostrem que no n'hi ha cap
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
getwd()
list.files()
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
description <- sapply(file[1,],function(x) str_replace_all(x,'[.]',' ')) #Creem llista de descripcion
name <- unlist(file[2,]) #Creem llista de noms
df <- data.frame(Name = name,Description=description)
rownames(df)<-NULL #Descartem la indexació per defecte
kbl(df) %>% #Dibixem la taula
kable_paper(full_width = F) %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2)%>%
scroll_box( height = "350px")
colnames(file)<-c('Code','Economy','Year','OPP','PC','FAIL','EI','TEA','OWN','EMPL','MOT','FMTEA','FMOD','JOB','INNOV','BSER','STAT','CHOI') #Setejem el nom de les columnes
file <- file[-c(1,2),] #Eliminem les files que no ens interessen
file <- type.convert(file, as.is=TRUE) #Tornem a fer que el sistema infereixi nous tipus de dades per columna
rownames(file) <- NULL #Ens desfem de la indexació automàtica
head(file,n=5) %>% #Dibuixem la taula
kbl() %>%
kable_paper("hover")
file["Economy"]%>%
unique()%>%
unlist()%>%
cat(sep=", ")
file$Economy <- sapply(file$Economy, str_to_title) #Apliquem els canvis de fer els noms de paisos majúscula.
file_gb <- file %>%
group_by(Economy) %>% #Agrupem per pais
summarise(min_year = min(Year),max_year = max(Year), registered_years = n_distinct(Year))
#Fem servir funcions agrupadores per deduir les dades
file_gb %>% #Dibuixem la taula per pantalla
mutate(index = row_number()) %>% #Afegim un index a la taula
select(index, everything()) %>% #Fiquem l'index el principi
kbl() %>%
kable_paper(bootstrap_options = "striped", full_width = F)%>%
scroll_box( height = "300px")
na_count <- sapply(file, function(x) sum(is.na(x))) #Es conten quants NA hi ha per columna
na_count%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
max_val <- sapply(file[,4:ncol(file)], function(x) max(x, na.rm=TRUE))#Calculem els maxim per columna
min_val <- sapply(file[,4:ncol(file)], function(x) min(x, na.rm=TRUE))#Calculem els minims per columna
df_result <- data.frame(Max=max_val, Min=min_val)
df_result%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
n_end<-ncol(file) #Creem una variable pel nombre de columnes
cols = file[,4:n_end] #Definim les columnes que volem manipular
cols[cols < 0 | cols > 100] <- NA #Setejem a NA les columnes que no volem
are_out_of_bound <- (cols < 0) | (cols > 100) #Busquem si hi ha valor fora dels limits
any(are_out_of_bound == TRUE, na.rm = TRUE) #Demostrem que no n'hi ha cap
boxplot(file$TEA, horizontal = TRUE, main="Box plot", xlab="file$TEA")
boxplot.stats(file$TEA)
knitr::opts_chunk$set(echo = TRUE)
#Incloem les llibreries que volem fer servir
library(kableExtra)
library(stringr)
library(dplyr)
library(VIM)
#Setejem el directori que volem fer servir de referència per llegir el CSV
setwd("/Users/ignasi/Desktop/Master/Anàlisi Estadística/Activitat 1")
file <- read.csv("gem01.csv",header = FALSE, stringsAsFactors = TRUE, sep = ";",dec = ".", na.strings=c(""))
description <- sapply(file[1,],function(x) str_replace_all(x,'[.]',' ')) #Creem llista de descripcion
name <- unlist(file[2,]) #Creem llista de noms
df <- data.frame(Name = name,Description=description)
rownames(df)<-NULL #Descartem la indexació per defecte
kbl(df) %>% #Dibixem la taula
kable_paper(full_width = F) %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2)%>%
scroll_box( height = "350px")
colnames(file)<-c('Code','Economy','Year','OPP','PC','FAIL','EI','TEA','OWN','EMPL','MOT','FMTEA','FMOD','JOB','INNOV','BSER','STAT','CHOI') #Setejem el nom de les columnes
file <- file[-c(1,2),] #Eliminem les files que no ens interessen
file <- type.convert(file, as.is=TRUE) #Tornem a fer que el sistema infereixi nous tipus de dades per columna
rownames(file) <- NULL #Ens desfem de la indexació automàtica
head(file,n=5) %>% #Dibuixem la taula
kbl() %>%
kable_paper("hover")
file["Economy"]%>%
unique()%>%
unlist()%>%
cat(sep=", ")
file$Economy <- sapply(file$Economy, str_to_title) #Apliquem els canvis de fer els noms de paisos majúscula.
file_gb <- file %>%
group_by(Economy) %>% #Agrupem per pais
summarise(min_year = min(Year),max_year = max(Year), registered_years = n_distinct(Year))
#Fem servir funcions agrupadores per deduir les dades
file_gb %>% #Dibuixem la taula per pantalla
mutate(index = row_number()) %>% #Afegim un index a la taula
select(index, everything()) %>% #Fiquem l'index el principi
kbl() %>%
kable_paper(bootstrap_options = "striped", full_width = F)%>%
scroll_box( height = "300px")
na_count <- sapply(file, function(x) sum(is.na(x))) #Es conten quants NA hi ha per columna
na_count%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
max_val <- sapply(file[,4:ncol(file)], function(x) max(x, na.rm=TRUE))#Calculem els maxim per columna
min_val <- sapply(file[,4:ncol(file)], function(x) min(x, na.rm=TRUE))#Calculem els minims per columna
df_result <- data.frame(Max=max_val, Min=min_val)
df_result%>%
t()%>% #Transformem les dades per mostrar-les millor
as.data.frame()%>%
kbl()%>%
kable_styling()
n_end<-ncol(file) #Creem una variable pel nombre de columnes
cols = file[,4:n_end] #Definim les columnes que volem manipular
cols[cols < 0 | cols > 100] <- NA #Setejem a NA les columnes que no volem
are_out_of_bound <- (cols < 0) | (cols > 100) #Busquem si hi ha valor fora dels limits
any(are_out_of_bound == TRUE, na.rm = TRUE) #Demostrem que no n'hi ha cap
boxplot(file$TEA, horizontal = TRUE, main="Box plot", xlab="file$TEA")
boxplot.stats(file$TEA)
extra_points <- boxplot.stats(file$TEA)$out
two_points <- extra_points[order(extra_points, decreasing=TRUE)][1:2]
original_row <- file$TEA
reduce_row <- file$TEA[!file$TEA %in% two_points]
analysis_df <- data.frame(
original_data = c(mean(original_row),median(original_row),sd(original_row),mad(original_row)),
reduced_data = c(mean(reduce_row),median(reduce_row),sd(reduce_row),mad(reduce_row)))
rownames(analysis_df) <- c("Mitjana aritmetica", "Mediana", "Desviació estàndart","Desviació respecte la mediana")
analysis_df %>% kbl()%>%
kable_styling()
getwd()
